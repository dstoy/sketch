{"version":3,"file":"sketch.umd.js","sources":["../src/router.ts","../src/lib/components/docs/store.ts","../src/lib/components/docs/docs.svelte","../src/lib/components/docs/prop.svelte","../src/lib/components/example.svelte","../src/lib/components/page/content.svelte","../src/lib/components/page/page.svelte","../src/page.ts","../src/lib/components/layout/navigation.svelte","../src/lib/components/layout/layout.svelte","../src/index.ts"],"sourcesContent":["import type { SvelteComponentDev } from \"svelte/internal\";\nimport { get, writable } from \"svelte/store\";\n\nconst added: Record<string, string> = {};\n\nexport const pages = writable<PageConfig[]>([]);\nexport const active = writable<PageConfig | undefined>(undefined);\nexport const params = writable<QueryParam>({});\n\nif (window.top === window) {\n    // Determine the current page from the url\n    parse(window.location);\n\n    // Handle the url change and process the url on update\n    window.addEventListener(\"popstate\", () => {\n        parse(window.location);\n    });\n\n    // Handle the page add event\n    window.addEventListener(\"registerPage\", (e: CustomEvent) => {\n        const { module, config } = e.detail;\n        addPage(module, config);\n    });\n}\n\n// Handle page reload events\nif (import.meta.hot) {\n    window.addEventListener(\"sketchPageLoad\", (e: CustomEvent) => {\n        const config = e.detail;\n        if (added[config.file]) {\n            updatePage(config);\n        }\n    });\n}\n\n/**\n * Parse a location and transform it to an active page entry\n * including the values for the query parameters\n */\nfunction parse(location: Location) {\n    const href = location.hash.replace(\"#\", \"\");\n    const parts = href.split(\"?\");\n    const slug = parts[0];\n\n    // Search for the page\n    const page = get(pages).find((page) => page.slug === slug);\n    if (!page) {\n        return;\n    }\n\n    // Set the page as active\n    active.set({ ...page });\n\n    // Process the query params\n    const _params = {};\n    if (parts.length > 1) {\n        const values: string[] = parts[1].split(\"&\");\n\n        // Convert the array of strings into an object\n        for (const pair of values) {\n            const kv = pair.split(\"=\");\n            const key = decodeURIComponent(kv[0]);\n            let value: QueryParamValue = decodeURIComponent(kv[1]);\n\n            // do some type casting\n            if (value === \"true\") {\n                value = true;\n            } else if (value === \"false\") {\n                value = false;\n            } else if (value.match(/^\\d+$/)) {\n                value = parseInt(value);\n            }\n\n            _params[key] = value;\n        }\n    }\n\n    params.set(_params);\n}\n\n/**\n * Load a page by it's slug\n */\nexport async function load(slug: string) {\n    window.location.hash = slug;\n}\n\n/**\n * Register a new page. Check if the passed modules is a\n * valid Sketch page and register it.\n */\nexport async function register(module: PageModule) {\n    const config = module.__sketch_page_config;\n    if (config) {\n        const { file, name } = config;\n        const exists = Object.values(added).find((entry) => name === entry);\n\n        // Check for existing page\n        if (exists) {\n            // eslint-disable-next-line no-console\n            console.error(\n                `Sketch: page '${name}' has already already been registerd`,\n            );\n            return;\n        }\n        added[file] = name;\n\n        // Add the page to the list\n        const event = new CustomEvent(\"registerPage\", {\n            detail: {\n                module: module.default,\n                config,\n            },\n        });\n        window.top.dispatchEvent(event);\n    }\n}\n\n/**\n * Add a new page to the router\n */\nasync function addPage(component: SvelteComponentDev, setup: SetupConfig) {\n    // extract the page config\n    const config = getPageConfig(setup);\n    const page: PageConfig = {\n        ...config,\n        component,\n    };\n\n    // Save the page in the store\n    pages.update((list) => {\n        return [...list, page];\n    });\n\n    // parse the url to pick a page\n    parse(window.location);\n\n    // open the home page by default\n    const $active = get(active);\n    if (!$active && setup.home) {\n        active.set({ ...page });\n    }\n}\n\n/**\n * Update a page configuration\n */\nfunction updatePage(setup: SetupConfig) {\n    const $pages = get(pages);\n    const page = $pages.find((page) => page.file === setup.file);\n    if (!page) {\n        return;\n    }\n\n    // Extract the new config and update the exsiting one\n    const config = getPageConfig(setup);\n    for (const key of Object.keys(config)) {\n        page[key] = config[key];\n    }\n\n    // Check if the page is active\n    const $active = get(active);\n    if ($active.file === page.file) {\n        if ($active.slug !== page.slug) {\n            active.set({ ...page });\n            load(page.slug);\n        }\n    }\n\n    pages.set($pages);\n}\n\n/**\n * Prepare the page configuration from the page setup arguments\n */\nfunction getPageConfig(setup: SetupConfig): Omit<PageConfig, \"component\"> {\n    const file = setup.file;\n    const name = setup.name;\n    const slug = name.toLowerCase().replace(/\\W+/gi, \"-\");\n\n    // Extract the page title\n    const parts = name.split(\"/\");\n    const title = parts[parts.length - 1];\n\n    return {\n        name,\n        title,\n        slug,\n        file,\n    };\n}\n\nexport interface PageConfig {\n    slug: string;\n    component: SvelteComponentDev;\n    title: string;\n    name: string;\n    file: string;\n}\n\ninterface SetupConfig {\n    file: string;\n    name: string;\n    home?: boolean;\n}\n\ninterface PageModule {\n    __sketch_page_config?: SetupConfig;\n    default: SvelteComponentDev;\n}\n\ntype QueryParamValue = string | number | boolean | undefined;\ntype QueryParam = Record<string, QueryParamValue>;\n\nexport default {\n    load,\n    pages,\n    active,\n    register,\n};\n","import { writable } from \"svelte/store\";\n\nexport const props = writable<PropConfig[]>([]);\n\n/**\n * Add a new property to the property list\n */\nexport function addProp(\n    name: string,\n    type: string,\n    defaultValue: string,\n    content: string,\n) {\n    props.update((list) => {\n        return [\n            ...list,\n            {\n                name,\n                type,\n                defaultValue,\n                content,\n            },\n        ];\n    });\n}\n\n/**\n * Remove a property from the property list\n */\nexport function removeProp(name: string) {\n    props.update((list) => {\n        return list.filter((el) => el.name !== name);\n    });\n}\n\ninterface PropConfig {\n    name: string;\n    type: string;\n    defaultValue?: string;\n    content: string;\n}\n","<script lang=\"ts\">\n    import { props } from \"./store\";\n</script>\n\n<div class=\"docs\">\n    <div class=\"title\">Props</div>\n    <table>\n        <thead>\n            <tr>\n                <td>Name</td>\n                <td>Description</td>\n                <td>Type</td>\n                <td>Default</td>\n            </tr>\n        </thead>\n        <tbody>\n            {#each $props as prop}\n                <tr>\n                    <td>{prop.name}</td>\n                    <td>{@html prop.content}</td>\n                    <td>{prop.type}</td>\n                    <td>{prop.defaultValue ?? \"-\"}</td>\n                </tr>\n            {/each}\n        </tbody>\n    </table>\n\n    <slot />\n</div>\n\n<style lang=\"scss\">\n    .docs {\n        background-color: #ffffff;\n        border: 1px solid #dddddd;\n        padding: 10px;\n        border-radius: 4px;\n        min-height: 200px;\n        box-shadow: 2px 2px 6px -2px rgba(0, 0, 0, 0.3);\n        margin-bottom: 20px;\n\n        & > .title {\n            color: #2d2d2d;\n            font-weight: bolder;\n            border-bottom: 1px solid #cacaca;\n            font-size: 1.1em;\n            padding-bottom: 5px;\n            margin-bottom: 10px;\n        }\n\n        & > table {\n            width: 100%;\n            border-collapse: collapse;\n\n            td {\n                border-top: 1px solid #f0f0f0;\n                border-bottom: 1px solid #f0f0f0;\n                padding: 5px 10px;\n                font-size: 0.9em;\n            }\n\n            thead td {\n                font-weight: bolder;\n                font-weight: bold;\n                border-bottom: 3px double #9a9a9a;\n            }\n\n            tbody tr:hover > td {\n                background: #f7f7f7;\n            }\n        }\n    }\n</style>\n","<script lang=\"ts\">\n    import { beforeUpdate, onDestroy } from \"svelte\";\n    import { addProp, removeProp } from \"./store\";\n\n    export let name: string;\n    export let type: string = \"string\";\n\n    let defaultValue = $$props[\"default\"];\n    let content: HTMLElement;\n    let registered = false;\n\n    beforeUpdate(() => {\n        if (content && !registered) {\n            addProp(name, type, defaultValue, content.innerHTML);\n            registered = true;\n        }\n    });\n\n    onDestroy(() => {\n        removeProp(name);\n    });\n</script>\n\n<div class=\"props\" bind:this={content}>\n    <slot />\n</div>\n\n<style lang=\"scss\">\n    .props {\n        display: none;\n    }\n</style>\n","<script lang=\"ts\">\n    export let center: boolean = true;\n</script>\n\n<div class=\"example\" class:centered={center}>\n    <slot />\n</div>\n\n<style lang=\"scss\">\n    .example {\n        background-color: #ffffff;\n        border: 1px solid #dddddd;\n        padding: 30px;\n        border-radius: 4px;\n        min-height: 140px;\n        box-shadow: 2px 2px 6px -2px rgba(0, 0, 0, 0.3);\n        margin-bottom: 20px;\n\n        &.centered {\n            display: flex;\n            align-items: center;\n            justify-content: center;\n        }\n    }\n</style>\n","<script lang=\"ts\">\n    import { page } from \"sketch\";\n    import { active } from \"sketch/router\";\n\n    page.setup(active);\n</script>\n\n<iframe title=\"page-frame\" frameborder=\"0\" width=\"100\" src=\"page.html\" />\n\n<style lang=\"scss\">\n    iframe {\n        width: 100%;\n        height: 100%;\n    }\n</style>\n","<script lang=\"ts\">\n    import { beforeUpdate, onDestroy } from \"svelte\";\n    import type { SvelteComponentDev } from \"svelte/internal\";\n\n    export let title = undefined;\n    export let page = undefined;\n\n    let root: HTMLElement;\n    let mounted: SvelteComponentDev;\n\n    beforeUpdate(() => {\n        if (page && root) {\n            // cleanup the old component\n            mounted?.$destroy();\n\n            // scroll to the top\n            document.body.scrollTop = 0;\n\n            // mount the new one\n            mounted = new page({ target: root });\n        }\n    });\n\n    onDestroy(() => {\n        mounted?.$destroy();\n    });\n</script>\n\n<div class=\"sketch-page\" bind:this={root}>\n    {#if title && page}\n        <div class=\"page-title\">{title}</div>\n    {/if}\n</div>\n\n<style lang=\"scss\" global>\n    @import \"../../../styles/main.scss\";\n    @import \"../../../styles/vars.scss\";\n\n    .sketch-page {\n        padding: 20px 40px;\n        background-color: var(--sketch-page-bg);\n        min-height: 100%;\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        right: 0;\n        overflow: auto;\n\n        & > *:not(.example):not(.scene) {\n            &,\n            * {\n                @include reset-font();\n\n                &:is(ul),\n                &:is(ol) {\n                    margin-left: 40px;\n                    margin-bottom: 20px;\n                }\n\n                &:is(ul) {\n                    list-style: disc;\n                }\n\n                &:is(ol) {\n                    list-style: number;\n                }\n\n                &:is(em) {\n                    font-style: italic;\n                }\n\n                &:is(strong) {\n                    font-weight: bolder;\n                }\n\n                &:is(code) {\n                    background-color: rgba(0, 0, 0, 0.05);\n                    border-radius: 3px;\n                    padding: 2px 8px;\n                }\n\n                &:is(pre) > code {\n                    background-color: rgba(0, 0, 0, 0.05);\n                    display: block;\n                    margin-bottom: 20px;\n                    padding: 10px 15px;\n                    border-radius: 4px;\n                }\n\n                &:is(blockquote) {\n                    display: block;\n                    margin-bottom: 20px;\n                    padding: 10px 15px;\n                    border-left: 5px solid rgba(0, 0, 0, 0.05);\n\n                    & > *:last-child {\n                        margin-bottom: 0;\n                    }\n                }\n            }\n        }\n\n        & > .page-title {\n            font-size: 2em !important;\n            font-weight: bolder;\n            margin-bottom: 20px;\n        }\n\n        & > h2 {\n            color: black;\n            font-weight: bolder;\n            border-bottom: 1px solid #cacaca;\n            font-size: 1.3em !important;\n            padding-bottom: 5px;\n            margin-bottom: 10px;\n        }\n    }\n</style>\n","import { get, Writable } from \"svelte/store\";\nimport type { PageConfig } from \"./router\";\nimport { Page } from \"./lib/components/page\";\n\n/**\n * Load the current page upon frame load event\n */\nfunction load() {\n    const active: Store = window.top.$$sketch.store;\n\n    // Get the current page\n    const $active = get(active);\n\n    const target = document.body;\n    const page = new Page({\n        target,\n        props: {\n            title: $active?.title,\n            page: $active?.component,\n        },\n    });\n\n    // Monitor for changes in the active store value\n    active.subscribe(($active) => {\n        page.$set({\n            title: $active?.title,\n            page: $active?.component,\n        });\n    });\n}\n\n/**\n * Load the wrapper component\n */\nfunction setup(active: Store) {\n    window.$$sketch = {\n        store: active,\n    };\n}\n\ntype Store = Writable<PageConfig | undefined>;\n\nexport default {\n    load,\n    setup,\n};\n","<script lang=\"ts\">\n    import { onDestroy } from \"svelte\";\n    import { get } from \"svelte/store\";\n    import { pages, active, load } from \"../../../router\";\n\n    let menu: MenuItem[] = [];\n\n    // process the page and build the navigation according to the\n    // page labels. If the labels contain / they will be treated as parents\n    const unsubscribe = pages.subscribe(($pages) => {\n        let group: Record<string, MenuItem> = {};\n        let $active = get(active);\n\n        let _menu: MenuItem[] = [];\n        $pages.map((page) => {\n            let target = _menu;\n\n            // check for paret element\n            let parts = page.name.split(\"/\");\n            if (parts.length > 1) {\n                let label = parts[0];\n                let parent = group[label];\n\n                // add the parent to the menu\n                if (!parent) {\n                    parent = {\n                        label,\n                        group: true,\n                        children: [],\n                    };\n\n                    _menu.push(parent);\n                    group[label] = parent;\n                }\n\n                // change the target where the menu entry will be added\n                target = parent.children;\n\n                // open the parent if the item is selected\n                if (page.slug === $active?.slug) {\n                    parent.opened = true;\n                }\n            }\n\n            // get the last item from the parts\n            let label = parts[parts.length - 1];\n            const url = `#${page.slug}`;\n\n            const item: MenuItem = {\n                slug: page.slug,\n                label,\n                url,\n            };\n            target.push(item);\n        });\n\n        // Sort the menu items moving the single items at the top\n        // and sorting all nested items alphabetically\n        _menu = _menu\n            .sort((a, b) => {\n                if (!!a.group > !!b.group) return 1;\n                if (!!a.group < !!b.group) return -1;\n                return 0;\n            })\n            .map((item) => {\n                if (item.group) {\n                    item.children = item.children.sort((a, b) => {\n                        if (a.label > b.label) return 1;\n                        if (a.label < b.label) return -1;\n                        return 0;\n                    });\n                }\n\n                return item;\n            });\n\n        menu = _menu;\n    });\n\n    // clean up on unload\n    onDestroy(() => {\n        unsubscribe();\n    });\n\n    // let active = undefined;\n    const onClick = (item: MenuItem) => {\n        if (item.group) {\n            item.opened = !item.opened;\n            menu = [...menu];\n        } else {\n            load(item.slug);\n        }\n    };\n\n    interface MenuItem {\n        label: string;\n        group?: boolean;\n        opened?: boolean;\n        url?: string;\n        slug?: string;\n        children?: MenuItem[];\n    }\n</script>\n\n<div class=\"navigation\">\n    <div class=\"head\">\n        <span class=\"logo\">\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                aria-hidden=\"true\"\n                role=\"img\"\n                width=\"32\"\n                height=\"32\"\n                preserveAspectRatio=\"xMidYMid meet\"\n                viewBox=\"0 0 24 24\"\n                ><g fill=\"none\"\n                    ><path\n                        d=\"M10.75 22H4.917a2.086 2.086 0 0 1-2.084-2.084v-9.7a1.977\n                        1.977 0 0 1-.592-2.558c.9-1.608 1.818-3.193 2.721-4.712A1.976\n                        1.976 0 0 1 6.666 2c.424.004.836.139 1.18.385l.024.015c.412.24\n                        4.392 2.609 7.591 4.512l2.84 1.688l.13.077a372.255 372.255\n                        0 0 1 2.744 1.628a1.963 1.963 0 0 1 .583 2.553c-.883\n                        1.577-1.8 3.162-2.72 4.712a1.983 1.983 0 0 1-1.68.951c-.136\n                        0-.27-.015-.4-.045c-.117.069-.757.48-1.568 1c-1.443.925-3.415\n                        2.19-3.643 2.307a1.976 1.976 0 0 1-.997.217zM4.5 13.03v6.886c0\n                        .23.187.417.417.417H8.74A485.729 485.729 0 0 1 4.5 13.03zm1.358-1c.4.687\n                        4.716 8.132 4.752 8.182a.3.3 0 0 0 .38.082c.134-.076 4.193-2.684\n                        4.233-2.71c-.314-.185-2.586-1.539-4.992-2.972L5.838\n                        12l.007.011l.01.017v.006l.003-.004zm.474-8.13c-.808 1.3-2.616\n                        4.528-2.64 4.587a.312.312 0 0 0 .124.386c.133.079 13.354 7.956\n                        13.48 7.976a.32.32 0 0 0 .048 0a.31.31 0 0 0 .266-.149a414.198 414.198\n                        0 0 0 2.694-4.667a.316.316 0 0 0-.125-.387c-.127-.076-13.323-7.918-13.408-7.955a.314.314\n                        0 0 0-.383.117l-.007.012l-.008.012l-.012.02v.005l-.015.024l-.015.019h.001zm1.353\n                        5.49a1.666 1.666 0 1 1 1.667-1.67a1.669 1.669 0 0 1-1.667 1.667v.003z\"\n                        fill=\"currentColor\"\n                    /></g\n                ></svg\n            >\n        </span>\n        <span class=\"name\"> Sketch Book </span>\n    </div>\n    <div class=\"menu\">\n        {#each menu as item}\n            {#if item.group}\n                <div class=\"group\" class:opened={item.opened}>\n                    <div class=\"label\" on:click={() => onClick(item)}>\n                        <em>{item.label}</em>\n                    </div>\n                    <div class=\"items\">\n                        {#each item.children as child}\n                            <a\n                                href={child.url}\n                                class:active={child.slug === $active?.slug}\n                                on:click|preventDefault={() => onClick(child)}\n                                >{child.label}</a\n                            >\n                        {/each}\n                    </div>\n                </div>\n            {:else}\n                <a\n                    href={item.url}\n                    class:active={item.slug === $active?.slug}\n                    on:click|preventDefault={() => onClick(item)}\n                    >{item.label}</a\n                >\n            {/if}\n        {/each}\n    </div>\n</div>\n\n<style lang=\"scss\">\n    $h-bg: #536579;\n    $h-color: white;\n    $text-color: #d1d0d0;\n\n    .navigation {\n        color: #d1d0d0;\n\n        & > .head {\n            font-weight: bolder;\n            padding: 8px 20px;\n            font-size: 1.2rem;\n            display: flex;\n            align-items: center;\n\n            .logo {\n                margin-right: 10px;\n                color: #f3903a;\n            }\n        }\n\n        & > .menu {\n            padding: 10px 10px;\n\n            a,\n            .group > .label {\n                display: block;\n                padding: 6px 10px;\n                text-decoration: none;\n                border-radius: 4px;\n                margin-bottom: 4px;\n                color: #d1d0d0;\n                cursor: pointer;\n\n                &:hover {\n                    background: $h-bg;\n                    color: $h-color;\n                }\n            }\n\n            a {\n                display: block;\n                padding: 6px 10px;\n                text-decoration: none;\n                border-radius: 4px;\n                margin-bottom: 4px;\n                cursor: pointer;\n\n                &.active {\n                    font-weight: bolder;\n                    background: $h-bg;\n                    color: $h-color;\n                }\n            }\n\n            .group {\n                & > .label {\n                    position: relative;\n                    padding-right: 24px;\n\n                    em {\n                        display: block;\n                        overflow: hidden;\n                        text-overflow: ellipsis;\n                        white-space: nowrap;\n                        font-weight: bolder;\n                        color: white;\n                    }\n\n                    &::after {\n                        content: \"\";\n                        display: block;\n                        position: absolute;\n                        top: 50%;\n                        right: 8px;\n\n                        width: 6px;\n                        height: 6px;\n                        margin-top: -0.35em;\n                        border-right: 1px solid currentColor;\n                        border-bottom: 1px solid currentColor;\n                        transform: rotate(45deg);\n                        transition: transform 0.2s ease-out,\n                            margin-top 0.2s ease-out;\n                    }\n                }\n\n                & > .items {\n                    display: none;\n                    border-left: 4px solid $h-bg;\n                    margin-left: 16px;\n                    padding-left: 7px;\n                }\n\n                &.opened {\n                    & > .label {\n                        &::after {\n                            transform: rotate(225deg);\n                            margin-top: -0.05em;\n                        }\n                    }\n                    & > .items {\n                        display: block;\n                    }\n                }\n            }\n        }\n    }\n</style>\n","<script lang=\"ts\">\n    import Navigation from \"./navigation.svelte\";\n    import { Content } from \"../page\";\n</script>\n\n<div class=\"layout\">\n    <div class=\"wrapper\">\n        <div class=\"navigation\">\n            <Navigation />\n        </div>\n        <div class=\"content\">\n            <Content />\n        </div>\n    </div>\n</div>\n\n<style lang=\"scss\">\n    .layout {\n        height: 100vh;\n        width: 100vw;\n        background: #474747;\n\n        & > .wrapper {\n            display: flex;\n            margin: 0 auto;\n            max-width: 1200px;\n            overflow: hidden;\n            height: 100%;\n            width: 100%;\n            box-shadow: 0px 0px 12px 2px rgba(0, 0, 0, 0.3);\n            position: relative;\n\n            & > .navigation {\n                width: 260px;\n                height: 100%;\n                overflow: auto;\n                background: #22344a;\n                box-shadow: 1px 0px 6px 2px rgba(0, 0, 0, 0.3);\n            }\n\n            & > .content {\n                flex: 1;\n                background-color: #f3f3f3;\n            }\n        }\n    }\n</style>\n","// Export the router\nexport { default as router } from \"./router\";\n\n// Export some common components\nexport * from \"./lib/components/docs\";\nexport { default as Scene } from \"./lib/components/scene.svelte\";\nexport { default as Example } from \"./lib/components/example.svelte\";\n\n// Export the inner page object\nexport { default as page } from \"./page\";\n\nimport App from \"./app.svelte\";\nimport \"./styles/main.scss\";\n\n/**\n * Start the application\n */\nexport function start({ target }: AppParams) {\n    return new App({ target: target });\n}\n\ninterface AppParams {\n    target: HTMLElement;\n}\n"],"names":["writable","get","load","insert","append","beforeUpdate","onDestroy"],"mappings":"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"}